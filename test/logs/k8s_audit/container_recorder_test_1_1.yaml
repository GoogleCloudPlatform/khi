# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

insertId: 85371f7c-2383-4041-96e8-dad63d2d1990
labels:
  authorization.k8s.io/decision: allow
  authorization.k8s.io/reason: 'RBAC: allowed by ClusterRoleBinding "system:controller:replicaset-controller" of ClusterRole "system:controller:replicaset-controller" to ServiceAccount "replicaset-controller/kube-system"'
  mutation.webhook.admission.k8s.io/round_0_index_3: '{"configuration":"pod-ready.config.common-webhooks.networking.gke.io","webhook":"pod-ready.common-webhooks.networking.gke.io","mutated":false}'
  mutation.webhook.admission.k8s.io/round_0_index_4: '{"configuration":"warden-mutating.config.common-webhooks.networking.gke.io","webhook":"warden-mutating.common-webhooks.networking.gke.io","mutated":false}'
  pod-security.kubernetes.io/enforce-policy: privileged:latest
logName: projects/sample-project/logs/cloudaudit.googleapis.com%2Factivity
operation:
  first: true
  id: 85371f7c-2383-4041-96e8-dad63d2d1990
  last: true
  producer: k8s.io
protoPayload:
  '@type': type.googleapis.com/google.cloud.audit.AuditLog
  authenticationInfo:
    principalEmail: system:serviceaccount:kube-system:replicaset-controller
  authorizationInfo:
    - granted: true
      permission: io.k8s.core.v1.pods.create
      resource: core/v1/namespaces/1-2-deployment-update/pods/nginx-deployment-surge-8655b4b8c5-xf5f4
  methodName: io.k8s.core.v1.pods.create
  request:
    '@type': core.k8s.io/v1.Pod
    apiVersion: v1
    kind: Pod
    metadata:
      creationTimestamp: null
      generateName: nginx-deployment-surge-8655b4b8c5-
      labels:
        app: nginx-surge
        pod-template-hash: 8655b4b8c5
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: nginx-deployment-surge-8655b4b8c5
          uid: 6533e65e-d644-42d5-8842-9b075981c4c5
    spec:
      containers:
        - image: nginx:1.14.2
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - containerPort: 80
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
            - /bin/sh
            - -c
            - sleep 60; touch /tmp/healthy; sleep 60000000;
          image: registry.k8s.io/busybox
          imagePullPolicy: Always
          name: late-startup
          readinessProbe:
            exec:
              command:
                - cat
                - /tmp/healthy
            failureThreshold: 3
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
    status: {}
  requestMetadata:
    callerIp: 172.16.0.3
    callerSuppliedUserAgent: kube-controller-manager/v1.28.14 (linux/amd64) kubernetes/a4ef1a6/system:serviceaccount:kube-system:replicaset-controller
  resourceName: core/v1/namespaces/1-2-deployment-update/pods/nginx-deployment-surge-8655b4b8c5-xf5f4
  response:
    '@type': core.k8s.io/v1.Pod
    apiVersion: v1
    kind: Pod
    metadata:
      creationTimestamp: "2024-01-01T01:00:00Z"
      generateName: nginx-deployment-surge-8655b4b8c5-
      labels:
        app: nginx-surge
        pod-template-hash: 8655b4b8c5
      managedFields:
        - apiVersion: v1
          fieldsType: FieldsV1
          fieldsV1:
            f:metadata:
              f:generateName: {}
              f:labels:
                .: {}
                f:app: {}
                f:pod-template-hash: {}
              f:ownerReferences:
                .: {}
                k:{"uid":"6533e65e-d644-42d5-8842-9b075981c4c5"}: {}
            f:spec:
              f:containers:
                k:{"name":"late-startup"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                k:{"name":"nginx"}:
                  .: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":80,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:status: {}
          manager: kube-controller-manager
          operation: Update
          time: "2024-01-01T01:00:00Z"
      name: nginx-deployment-surge-8655b4b8c5-xf5f4
      namespace: 1-2-deployment-update
      ownerReferences:
        - apiVersion: apps/v1
          blockOwnerDeletion: true
          controller: true
          kind: ReplicaSet
          name: nginx-deployment-surge-8655b4b8c5
          uid: 6533e65e-d644-42d5-8842-9b075981c4c5
      resourceVersion: "15465"
      uid: c0b4e00d-da76-4255-9a02-670d5b74aa3a
    spec:
      containers:
        - image: nginx:1.14.2
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - containerPort: 80
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access-nq8wz
              readOnly: true
        - args:
            - /bin/sh
            - -c
            - sleep 60; touch /tmp/healthy; sleep 60000000;
          image: registry.k8s.io/busybox
          imagePullPolicy: Always
          name: late-startup
          readinessProbe:
            exec:
              command:
                - cat
                - /tmp/healthy
            failureThreshold: 3
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access-nq8wz
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - name: kube-api-access-nq8wz
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  items:
                    - key: ca.crt
                      path: ca.crt
                  name: kube-root-ca.crt
              - downwardAPI:
                  items:
                    - fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                      path: namespace
    status:
      phase: Pending
      qosClass: BestEffort
  serviceName: k8s.io
  status:
    code: 0
receiveTimestamp: "2024-01-01T01:00:00Z"
resource:
  labels:
    cluster_name: sample-cluster
    location: us-central1-a
    project_id: sample-project
  type: k8s_cluster
timestamp: "2024-01-01T01:00:00Z"
